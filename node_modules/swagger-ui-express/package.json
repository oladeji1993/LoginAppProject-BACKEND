{
  "_args": [
    [
      {
        "raw": "swagger-ui-express",
        "scope": null,
        "escapedName": "swagger-ui-express",
        "name": "swagger-ui-express",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\olani\\Desktop\\huroku Api"
    ]
  ],
  "_from": "swagger-ui-express",
  "_hasShrinkwrap": false,
  "_id": "swagger-ui-express@4.1.6",
  "_location": "/swagger-ui-express",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/swagger-ui-express_4.1.6_1608660714846_0.656749375086628"
  },
  "_npmUser": {
    "name": "scottie1984",
    "email": "scottie1984@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "swagger-ui-express",
    "scope": null,
    "escapedName": "swagger-ui-express",
    "name": "swagger-ui-express",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-4.1.6.tgz",
  "_shasum": "682294af3d5c70f74a1fa4d6a9b503a9ee55ea82",
  "_shrinkwrap": null,
  "_spec": "swagger-ui-express",
  "_where": "C:\\Users\\olani\\Desktop\\huroku Api",
  "author": {
    "name": "Stephen Scott",
    "email": "scottie1984@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/scottie1984/swagger-ui-express/issues"
  },
  "dependencies": {
    "swagger-ui-dist": "^3.18.1"
  },
  "description": "Swagger UI Express",
  "devDependencies": {
    "es6-shim": "0.35.2",
    "express": "4.12.2",
    "mocha": "2.2.5",
    "phantom": "2.1.21"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Xs2BGGudvDBtL7RXcYtNvHsFtP1DBFPMJFRxHe5ez/VG/rzVOEjazJOOSc/kSCyxreCTKfJrII6MJlL9a6t8vw==",
    "shasum": "682294af3d5c70f74a1fa4d6a9b503a9ee55ea82",
    "tarball": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-4.1.6.tgz",
    "fileCount": 4,
    "unpackedSize": 19075,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4jbrCRA9TVsSAnZWagAAe4EP/AhUb+6aND+netAfqDZq\nmlTXZxKC8/3KTth17TuWosL/rtzuOXfkSZ2F670FASuGNInUTWRHA/EzJmJg\ngnVxwjMqlOIh7X20gWTAEyds9KT1BAplw98eJH/R05No8Anw5eooA4i1FAky\n53vM/EHCy7zOmo87zbPRLzTsYWNr8T/SaFUirPitDApclPAD5euWm9lhLidl\nMcG8GmuodYUa1yt/DQaSDNgutTpoNNgwezTN11J/HuEgAEMPAca15aA8NPWM\nFD37VLhE1oM1my3+m2ICjNEBjMgdSVVDzW2S/3mi10I6Rlr9nwGShTzFg3Mr\n2B79CSGwWopvCjO4E1vDs7kaPOPMpcAmBbqa1I1bN+Lx//m7MA903CsQcMsu\nVaLoR3tMsBB/DsTTJtVZcbucoUWCRq1amkwtgo6DhGhO6wcvOM+qXr8cnWtS\nea2ig6ezMDNDVCW55pzh+M26yuEyjrUB44daxwKCZ3ELVj1gOZcr/JJpfoPx\nA3BQdjOP9jV7ShX+E2pcZt7Fyw9SL9KgnvW0nNWvUow9+AwNM8nSyWf0p5VV\nCGAS49Y1I+MP7jEURATQDLieq13LFTFd9C7B9DhPUpHr2aUG5OyJ14rmkxqj\nmAJh4GylQheF8zTAs7petipsulIU7oYY6/HeylZ1GJQ1bIfrrH4wD1cdGcW5\nd4s4\r\n=8CMO\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= v0.10.32"
  },
  "files": [
    "package.json",
    "index.js",
    "indexTemplate.html.tpl",
    "swagger-ui-init.js.tpl",
    "LICENSE"
  ],
  "gitHead": "44d5e10e20cd379d4ebfd377ca79957567a90391",
  "homepage": "https://github.com/scottie1984/swagger-ui-express",
  "keywords": [
    "swagger",
    "express",
    "ui",
    "json",
    "documentation"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "scottie1984",
      "email": "scottie1984@gmail.com"
    }
  ],
  "name": "swagger-ui-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "express": ">=4.0.0"
  },
  "private": false,
  "readme": "# Swagger UI Express\n\nThis module allows you to serve auto-generated [swagger-ui](https://swagger.io/tools/swagger-ui/) generated API docs from express, based on a `swagger.json` file. The result is living documentation for your API hosted from your API server via a route.\n\nSwagger version is pulled from npm module swagger-ui-dist. Please use a lock file or specify the version of swagger-ui-dist you want to ensure it is consistent across environments.\n\nYou may be also interested in:\n\n* [swagger-jsdoc](https://github.com/Surnet/swagger-jsdoc/blob/master/docs/GETTING-STARTED.md): Allows you to markup routes\nwith jsdoc comments. It then produces a full swagger yml config dynamically, which you can pass to this module to produce documentation. See below under the usage section for more info.\n* [swagger tools](https://github.com/swagger-api): Various tools, including swagger editor, swagger code gen etc.\n\n## Usage\n\nInstall using npm:\n\n```bash\n$ npm install swagger-ui-express\n```\n\nExpress setup `app.js`\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\nor if you are using Express router\n\n```javascript\nconst router = require('express').Router();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nrouter.use('/api-docs', swaggerUi.serve);\nrouter.get('/api-docs', swaggerUi.setup(swaggerDocument));\n```\n\nOpen http://`<app_host>`:`<app_port>`/api-docs in your browser to view the documentation.\n\nIf you want to set up routing based on the swagger document checkout [swagger-express-router](https://www.npmjs.com/package/swagger-express-router)\n\n### [swagger-jsdoc](https://www.npmjs.com/package/swagger-jsdoc)\n\nIf you are using swagger-jsdoc simply pass the swaggerSpec into the setup function:\n\n```javascript\n// Initialize swagger-jsdoc -> returns validated swagger spec in json format\nconst swaggerSpec = swaggerJSDoc(options);\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n```\n\n### Swagger Explorer\n\nBy default the Swagger Explorer bar is hidden, to display it pass true as the 'explorer' property of the options to the setup function:\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nvar options = {\n  explorer: true\n};\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));\n```\n\n### Custom swagger options\n\nTo pass custom options e.g. validatorUrl, to the SwaggerUi client pass an object as the 'swaggerOptions' property of the options to the setup function:\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nvar options = {\n  swaggerOptions: {\n    validatorUrl: null\n  }\n};\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));\n```\n\nFor all the available options, refer to [Swagger UI Configuration](https://github.com/swagger-api/swagger-ui/blob/master/docs/usage/configuration.md)\n\n### Custom CSS styles\n\nTo customize the style of the swagger page, you can pass custom CSS as the 'customCss' property of the options to the setup function.\n\nE.g. to hide the swagger header:\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nvar options = {\n  customCss: '.swagger-ui .topbar { display: none }'\n};\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));\n```\n\n### Custom CSS styles from Url\n\nYou can also pass the url to a custom css file, the value must be the public url of the file and can be relative or absolute to the swagger path.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nvar options = {\n  customCssUrl: '/custom.css'\n};\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));\n```\n\n### Custom JS\n\nIf you would like to have full control over your HTML you can provide your own javascript file, value accepts absolute or relative path. Value must be the public url of the js file.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\nvar options = {\n  customJs: '/custom.js'\n};\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument, options));\n```\n\n### Load swagger from url\n\nTo load your swagger from a url instead of injecting the document, pass `null` as the first parameter, and pass the relative or absolute URL as the 'url' property to 'swaggerOptions' in the setup function.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\n\nvar options = {\n  swaggerOptions: {\n    url: 'http://petstore.swagger.io/v2/swagger.json'\n  }\n}\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(null, options));\n```\n\nTo load multiple swagger documents from urls as a dropdown in the explorer bar, pass an array of object with `name` and `url` to 'urls' property to 'swaggerOptions' in the setup function.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\n\nvar options = {\n  explorer: true,\n  swaggerOptions: {\n    urls: [\n      {\n        url: 'http://petstore.swagger.io/v2/swagger.json',\n        name: 'Spec1'\n      },\n      {\n        url: 'http://petstore.swagger.io/v2/swagger.json',\n        name: 'Spec2'\n      }\n    ]\n  }\n}\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(null, options));\n```\n\nMake sure 'explorer' option is set to 'true' in your setup options for the dropdown to be visible.\n\n\n### Load swagger from yaml file\n\nTo load your swagger specification yaml file you need to use a module able to convert yaml to json; for instance `yamljs`.\n\n    npm install --save yamljs\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst YAML = require('yamljs');\nconst swaggerDocument = YAML.load('./swagger.yaml');\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n```\n\n\n### Modify swagger file on the fly before load\n\nTo dynamically set the host, or any other content, in the swagger file based on the incoming request object you may pass the json via the req object; to achieve this just do not pass the the swagger json to the setup function and it will look for `swaggerDoc` in the `req` object.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocument = require('./swagger.json');\n\napp.use('/api-docs', function(req, res, next){\n    swaggerDocument.host = req.get('host');\n    req.swaggerDoc = swaggerDocument;\n    next();\n}, swaggerUi.serve, swaggerUi.setup());\n```\n\n### Two swagger documents\n\nTo run 2 swagger ui instances with different swagger documents, use the serveFiles function instead of the serve function. The serveFiles function has the same signature as the setup function.\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst swaggerUi = require('swagger-ui-express');\nconst swaggerDocumentOne = require('./swagger-one.json');\nconst swaggerDocumentTwo = require('./swagger-one.json');\n\nvar options = {}\n\napp.use('/api-docs-one', swaggerUi.serveFiles(swaggerDocumentOne, options), swaggerUi.setup(swaggerDocumentOne));\n\napp.use('/api-docs-two', swaggerUi.serveFiles(swaggerDocumentTwo, options), swaggerUi.setup(swaggerDocumentTwo));\n```\n\n\n## Requirements\n\n* Node v0.10.32 or above\n* Express 4 or above\n\n## Testing\n\n* Install phantom\n* `npm install`\n* `npm test`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/scottie1984/swagger-ui-express.git"
  },
  "scripts": {
    "test": "mocha test/*",
    "test-app": "node ./test/testapp/run.js "
  },
  "version": "4.1.6"
}
